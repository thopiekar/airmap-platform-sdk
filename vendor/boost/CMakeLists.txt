cmake_minimum_required(VERSION 3.5)

# This cmake setup builds boost in a way suitable for linking with
# the AirMap platform SDK. 
#
# We are aiming to support the following platforms/architectures:
#
#   * linux/windows/android/macOS x86(64)
#   * linux/android/ios arm(64)
#
# To this end, we translate CMake variables and cross-compilation facilities
# to boost.build.
project(external-boost C CXX)

include(ExternalProject)

set(
  AIRMAP_BOOST_COMPONENTS
  "--with-date_time --with-filesystem --with-log --with-program_options --with-test --with-system --with-thread"
)

if (${ANDROID})
  message(STATUS "Enabling Android build for Boost - ${ANDROID_ABI}")

  string(REPLACE " " " <cflags>"    AIRMAP_BOOST_ANDROID_STANDARD_C_FLAGS       "<cflags>${CMAKE_C_FLAGS}")
  string(REPLACE " " " <cxxflags>"  AIRMAP_BOOST_ANDROID_STANDARD_CXX_FLAGS     "<cxxflags>${CMAKE_CXX_FLAGS}")
  string(REPLACE " " " <linkflags>" AIRMAP_BOOST_ANDROID_STANDARD_CXX_LIBRARIES "<linkflags>${CMAKE_CXX_STANDARD_LIBRARIES}")

  foreach (isystem IN LISTS CMAKE_CXX_STANDARD_INCLUDE_DIRECTORIES)
    set(AIRMAP_BOOST_ANDROID_STANDARD_INCLUDE_DIRECTORIES "<cxxflags>-isystem <cxxflags>${isystem} ${AIRMAP_BOOST_ANDROID_STANDARD_INCLUDE_DIRECTORIES}")
  endforeach ()

  configure_file(
    ${CMAKE_CURRENT_SOURCE_DIR}/android/user-config.jam.in 
    ${CMAKE_CURRENT_BINARY_DIR}/android/user-config.jam
  )

  set(AIRMAP_BOOST_B2_COMMAND_FLAGS_USER_CONFIG --user-config=${CMAKE_CURRENT_BINARY_DIR}/android/user-config.jam)
  set(AIRMAP_BOOST_B2_COMMAND_FLAGS_TARGET_OS target-os=android)
  set(AIRMAP_BOOST_B2_COMMAND_FLAGS_TOOLSET toolset=clang-android)
  
  if (${ANDROID_ABI} STREQUAL "armeabi")
    set(AIRMAP_BOOST_B2_COMMAND_FLAGS_ARCHITECTURE architecture=arm)
  elseif (${ANDROID_ABI} STREQUAL "armeabi-v7a")
    set(AIRMAP_BOOST_B2_COMMAND_FLAGS_ARCHITECTURE architecture=arm)
  elseif (${ANDROID_ABI} STREQUAL "arm64-v8a")
    set(AIRMAP_BOOST_B2_COMMAND_FLAGS_ARCHITECTURE architecture=arm)
  elseif (${ANDROID_ABI} STREQUAL "x86")
    set(AIRMAP_BOOST_B2_COMMAND_FLAGS_ARCHITECTURE architecture=x86)
  elseif (${ANDROID_ABI} STREQUAL "x86_64")
    set(AIRMAP_BOOST_B2_COMMAND_FLAGS_ARCHITECTURE architecture=ia64)
  endif ()
else ()
  set(AIRMAP_BOOST_CXX_FLAGS "cxxflags=-fPIC")
endif ()

if (AIRMAP_BOOST_B2_COMMAND_FLAGS_USER_CONFIG)
  message(STATUS "  user config: ${AIRMAP_BOOST_B2_COMMAND_FLAGS_USER_CONFIG}")
else ()
  message(STATUS "  user config: not set")
endif()

if (AIRMAP_BOOST_B2_COMMAND_FLAGS_ARCHITECTURE)
  message(STATUS "  arch:        ${AIRMAP_BOOST_B2_COMMAND_FLAGS_ARCHITECTURE}")
else ()
  message(STATUS "  arch:        not set")
endif ()

if (AIRMAP_BOOST_B2_COMMAND_FLAGS_TOOLSET) 
  message(STATUS "  toolset:     ${AIRMAP_BOOST_B2_COMMAND_FLAGS_TOOLSET}")
else ()
  message(STATUS "  toolset:     not set")
endif ()

if(UNIX)
  set(AIRMAP_BOOST_BOOTSTRAP_COMMAND ./bootstrap.sh)
  set(AIRMAP_BOOST_B2_COMMAND ./b2)
else()
  if(WIN32)
    set(AIRMAP_BOOST_BOOTSTRAP_COMMAND bootstrap.bat)
    set(AIRMAP_BOOST_B2_COMMAND b2.exe)
  endif()
endif()

ExternalProject_Add(
  boost
  URL https://boostorg.jfrog.io/artifactory/main/release/1.70.0/source/boost_1_70_0.tar.bz2
  URL_HASH SHA256=430ae8354789de4fd19ee52f3b1f739e1fba576f0aded0897c3c2bc00fb38778
  BUILD_IN_SOURCE 1
  UPDATE_COMMAND ""
  PATCH_COMMAND
    patch -p0 < ${CMAKE_CURRENT_SOURCE_DIR}/patches/fix_xcompile_android_patch.diff
  CONFIGURE_COMMAND ${AIRMAP_BOOST_BOOTSTRAP_COMMAND}
  BUILD_COMMAND
    ${AIRMAP_BOOST_B2_COMMAND}
      -d +2
      ${AIRMAP_BOOST_B2_COMMAND_FLAGS_USER_CONFIG}
      ${AIRMAP_BOOST_COMPONENTS}
      --disable-icu 
      --prefix=$ENV{AIRMAP_BOOST_OUTPUT_PATH}
      define=BOOST_LOG_WITHOUT_IPC
      cxxflags=-fvisibility=hidden
      cxxflags=-fvisibility-inlines-hidden
      ${AIRMAP_BOOST_CXX_FLAGS} 
      ${AIRMAP_BOOST_B2_COMMAND_FLAGS_TOOLSET} 
      ${AIRMAP_BOOST_B2_COMMAND_FLAGS_ARCHITECTURE} 
      ${AIRMAP_BOOST_B2_COMMAND_FLAGS_TARGET_OS} 
      threading=multi link=static variant=release
  INSTALL_COMMAND
    ${AIRMAP_BOOST_B2_COMMAND} 
      ${AIRMAP_BOOST_B2_COMMAND_FLAGS_USER_CONFIG} 
      ${AIRMAP_BOOST_COMPONENTS}
      --disable-icu 
      --prefix=$ENV{AIRMAP_BOOST_OUTPUT_PATH}
      define=BOOST_LOG_WITHOUT_IPC
      cxxflags=-fvisibility=hidden
      cxxflags=-fvisibility-inlines-hidden
      ${AIRMAP_BOOST_CXX_FLAGS} 
      ${AIRMAP_BOOST_B2_COMMAND_FLAGS_TOOLSET} 
      ${AIRMAP_BOOST_B2_COMMAND_FLAGS_ARCHITECTURE} 
      ${AIRMAP_BOOST_B2_COMMAND_FLAGS_TARGET_OS} 
      threading=multi link=static variant=release install
)
